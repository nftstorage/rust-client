/*
 * NFT Storage API
 *
 * # API Reference 
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Nft {
    /// Self-describing content-addressed identifiers for distributed systems. Check [spec](https://github.com/multiformats/cid) for more info.
    #[serde(rename = "cid", skip_serializing_if = "Option::is_none")]
    pub cid: Option<String>,
    /// Size in bytes of the NFT data.
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<f32>,
    /// This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: YYYY-MM-DDTHH:MM:SSZ.
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<String>,
    /// MIME type of the upload file or 'directory' when uploading multiple files.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Type>,
    /// Name of the JWT token used to create this NFT.
    #[serde(rename = "scope", skip_serializing_if = "Option::is_none")]
    pub scope: Option<String>,
    #[serde(rename = "pin", skip_serializing_if = "Option::is_none")]
    pub pin: Option<Box<crate::models::Pin>>,
    /// Files in the directory (only if this NFT is a directory).
    #[serde(rename = "files", skip_serializing_if = "Option::is_none")]
    pub files: Option<Vec<serde_json::Value>>,
    #[serde(rename = "deals", skip_serializing_if = "Option::is_none")]
    pub deals: Option<Box<crate::models::NftDeals>>,
}

impl Nft {
    pub fn new() -> Nft {
        Nft {
            cid: None,
            size: None,
            created: None,
            _type: None,
            scope: None,
            pin: None,
            files: None,
            deals: None,
        }
    }
}

/// MIME type of the upload file or 'directory' when uploading multiple files.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "directory")]
    Directory,
    #[serde(rename = "image/jpeg")]
    ImageJpeg,
    #[serde(rename = "application/json")]
    ApplicationJson,
    #[serde(rename = "other mime types")]
    OtherMimeTypes,
}

